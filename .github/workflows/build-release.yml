name: Build and Release Windows Executable

on:
  push:
    tags:
      - 'v*'  # 匹配 v 开头的标签，如 v1.0.0 (注意改为小写v，更符合常规)

jobs:
  build-and-release:
    runs-on: windows-latest  # 使用 Windows 环境确保生成 .exe 文件
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0  # 获取完整的git历史记录，用于贡献者列表
      
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'  # 指定你的 Python 版本
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pyinstaller
        if exist requirements.txt pip install -r requirements.txt
        
    - name: Build with PyInstaller
      run: |
        pyinstaller lalc.spec
        # 确认构建结果
        dir dist
        if not exist "dist\lalc.zip" (
          echo "lalc.zip not found in dist directory!"
          exit 1
        )
        
    - name: Get contributors list
      id: contributors
      run: |
        # 获取所有不重复的贡献者名单（Git 提交作者）
        $contributors = git log --format='%aN' | sort -u | Where-Object { $_ -ne "" } | ForEach-Object { "- $_" }
        $contributors = $contributors -join "`n"
        echo "contributors<<EOF" >> $env:GITHUB_OUTPUT
        echo "$contributors" >> $env:GITHUB_OUTPUT
        echo "EOF" >> $env:GITHUB_OUTPUT
        
    - name: Get release notes from tag
      id: release-notes
      run: |
        $tag = $env:GITHUB_REF -replace 'refs/tags/', ''
        $notes = git tag -l --format='%(contents)' $tag
        if (-not $notes) {
          $notes = "No release notes provided."
        }
        echo "notes<<EOF" >> $env:GITHUB_OUTPUT
        echo "$notes" >> $env:GITHUB_OUTPUT
        echo "EOF" >> $env:GITHUB_OUTPUT
        
    - name: Create GitHub Release
      uses: softprops/action-gh-release@v1
      with:
        files: dist/lalc.zip
        body: |
          # 🧑‍💻 贡献者
          ${{ steps.contributors.outputs.contributors }}
          
          # 📝 版本说明
          ${{ steps.release-notes.outputs.notes }}
        tag_name: ${{ github.ref_name }}
        name: Release ${{ github.ref_name }}
        prerelease: ${{ contains(github.ref_name, 'alpha') || contains(github.ref_name, 'beta') || contains(github.ref_name, 'rc') }}